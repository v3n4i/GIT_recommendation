НАСТРОИТЬ гит:
git version — запросить версию Git;
git config --global user.name "твоё имя" — прописать в настройках программы своё имя;
git config --global user.email your_email@yandex.com — прописать в настройках программы свою почту;
git config --list — вывести список всех настроек.
СОЗДАТЬ РЕПОЗИТОРИЙ:
git init — инициализировать Git в текущей директории.
ИЗМЕНИТЬ СТАТУС ФАЙЛА:
git status — отобразить состояние текущего репозитория;
git add Main.java — добавить файл Main.java в индекс;
git add --all — добавить в индекс все файлы из вложенных каталогов;
git add . — то же, что и git add --all ;
git commit -m "My first commit" — сделать коммит с комментарием My first commit;
git commit --amend -m "First commit: new files added" — добавить изменения к предыдущему коммиту с комментарием First commit: new files added;
Чтобы игнорировать файл, добавь его название в файл .gitignore .
git mv converter.java data_converter.java — переименовать файл converter.java в data_converter.java;
git rm data_converter.java — прекратить отслеживать файл data_converter.java;
ИСТОРИЯ КОМИТОВ:
git log — посмотреть информацию о коммитах;
git show c952d96 — посмотреть изменения в конкретном коммите. Семь символов после show — это контрольная сумма нужного коммита;
git show HEAD — посмотреть последний коммит;
git reset 7639878 — откатить изменения до коммита с контрольной суммой 7639878;
git reset HEAD — откатить изменения всех файлов до предыдущего коммита;
git reset HEAD Main.java — откатить изменения в файле Main.java до предыдущего коммита;
ВЕТВЛЕНИЕ:
git branch — просмотр текущей ветки;
git branch develop — создать ветку с именем develop ;
Используй git branch для создания веток, только если в основной ветке были коммиты.
git checkout develop — перейти в ветку develop ;
git checkout -b название_ветки — создать ветку и сразу в неё перейти. Можно использовать, даже если в основной ветке не было коммитов;
git merge [название ветки, которую присоединяют] — объединить эту ветку с текущей.
Обрати внимание: коммиты переходят в ту ветку, на которой ты находишься, когда мёрджишь.
git push -u origin main — запушить изменения из ветки main на GitHub.






